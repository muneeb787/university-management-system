/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Student_Dashboard;

import Faculity_Dashboard.*;
import DatabaseConnectivity.connectivity;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.jdatepicker.DateLabelFormatter;

/**
 *
 * @author Muneeb Ahmad
 */
public final class AttendanceReport extends javax.swing.JPanel {

    ResultSet myres = null;
    connectivity con = null;
    String STUDENT_ID = null;
    String Sem_No = null;
    String Dept_Code = null;
    String Opt_Sub = null;

    /**
     * Creates new form Departments
     */
    public AttendanceReport() throws SQLException {
        initComponents();
        con = new connectivity();
        jTable1.getTableHeader().setFont(new Font("segoe UI", Font.BOLD, 16));
        jTable1.getTableHeader().setOpaque(false);
        jTable1.getTableHeader().setBackground(new Color(32, 136, 203));
        jTable1.getTableHeader().setForeground(new Color(255, 255, 255));
        jTable1.getTableHeader().setFont(new Font("Arial", Font.BOLD, 20));
        DefaultTableModel tMOdel = (DefaultTableModel) jTable1.getModel();
        tMOdel.setRowCount(0);
        System.out.println("dsfadfasdfsadfasd");
        fetchUserData();
        jTable1.setSelectionBackground(Color.darkGray);

    }

    AttendanceReport(String stud_id) throws SQLException {
        initComponents();
        System.out.println("Clicking 1");
        STUDENT_ID = stud_id;
        System.out.println("Clicking 2");
        con = new connectivity();
        System.out.println("Clicking 3");
        jTable1.getTableHeader().setFont(new Font("Arial", Font.BOLD, 16));
        jTable1.getTableHeader().setOpaque(false);
        jTable1.getTableHeader().setBackground(new Color(32, 136, 203));
        jTable1.getTableHeader().setForeground(new Color(255, 255, 255));
        DefaultTableModel tMOdel = (DefaultTableModel) jTable1.getModel();
        tMOdel.setRowCount(0);
        fetchUserData();
        System.out.println("Clicking 4");
        jTable1.setSelectionBackground(Color.darkGray);
//settable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        kGradientPanel2 = new com.k33ptoo.components.KGradientPanel();
        kGradientPanel1 = new com.k33ptoo.components.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(574, 539));
        setRequestFocusEnabled(false);

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        kGradientPanel2.setkEndColor(new java.awt.Color(51, 51, 51));
        kGradientPanel2.setkStartColor(new java.awt.Color(51, 51, 51));

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 102, 102));
        kGradientPanel1.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ATTENDANCE REPORT");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel2)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(23, 23, 23))
        );

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(51, 51, 51));
        jTable1.setFont(new java.awt.Font("Myanmar Text", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Department", "Subject", "Total Attendance", "Percentage"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setFillsViewportHeight(true);
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(51, 51, 51));
        jTable1.setRequestFocusEnabled(false);
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(32, 136, 203));
        jTable1.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jTable1.setShowGrid(true);
        jTable1.setShowVerticalLines(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel3.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(507, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addGap(73, 73, 73)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(669, 669, 669))
        );

        jScrollPane1.setViewportView(kGradientPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
//        int index = jTable1.getSelectedRow();
//        DefaultTableModel TableModel = (DefaultTableModel) jTable1.getModel();
//        TableModel model = jTable1.getModel();
//
//        System.out.println("Get Clicked");
//        int i = jTable1.getSelectedRow();
//        System.out.println("Row is: " + i);
//        String pre = (String) jTable1.getValueAt(i, 3);
//        System.out.println("String is: " + pre);
//        Component c = jTable1.getCellRenderer(i, 3).getTableCellRendererComponent(jTable1, null, false, true, i, 3);
//
//        if (pre == "Present") {
//            jTable1.setValueAt("Absent", i, 3);
//            //c.setBackground(Color.RED);
//            //jTable1.setSelectionBackground(Color.red);
//        } else {
//            jTable1.setValueAt("Present", i, 3);
//            //c.setBackground(Color.darkGray);
//            //jTable1.setSelectionBackground(Color.darkGray);
//        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained

    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased

    }//GEN-LAST:event_jTable1MouseReleased
    public void fetchUserData() {
        try {
            myres = con.mystmt.executeQuery("select * from student");
            int sr = 0;
            while (myres.next()) {
                if (myres.getString("STUDENT_ID").equals(STUDENT_ID)) {

                    Sem_No = myres.getString("SEMESTER");
                    Dept_Code = myres.getString("DEPT_CODE");
                    Opt_Sub = myres.getString("OPTIONAL_SUBJECT");
                }

            }
            settable();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public final void settable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        try {
            myres = con.mystmt.executeQuery("select distinct a.SUB_CODE ,t.SUB_NAME,s.DEPT_CODE,s.STUDENT_ID, (select count(*) from attendence where SUB_CODE=a.SUB_CODE and STUDENT_ID=s.STUDENT_ID and Attendance_status='Present') as 'Present',(select count(*) from attendence where SUB_CODE=a.SUB_CODE and STUDENT_ID=s.STUDENT_ID) as 'Total' from student s left join attendence a on s.STUDENT_ID=a.STUDENT_ID join subject t on a.SUB_CODE=t.SUB_CODE where s.DEPT_CODE='" + Dept_Code + "' and s.SEMESTER='" + Sem_No + "' and a.STUDENT_ID='" + STUDENT_ID + "'");
            int Total_Present = 0;
            int Total_Attedace = 0;
            float Total_Perc = 0;
            while (myres.next()) {
                String Dept_Code = myres.getString("DEPT_CODE");
                String SUB_NAME = myres.getString("SUB_NAME");
                String SUB_CODE = myres.getString("SUB_CODE");
                String STUDENT_ID = myres.getString("STUDENT_ID");
                String Present = myres.getString("Present");
                String Total = myres.getString("Total");
                Total_Present += Integer.parseInt(Present);
                Total_Attedace += Integer.parseInt(Total);
                float Perc = (Integer.parseInt(Present) * 100) / Integer.parseInt(Total);

                String resultdata[] = {STUDENT_ID, Dept_Code, SUB_NAME, Present + " Out Of " + Total, String.valueOf(Perc) + "%"};

                model.addRow(resultdata);
            }
            Total_Perc = (Total_Present * 100) / Total_Attedace;
            String resultdata[] = {null, "Total", null, Total_Present + " Out Of " + Total_Attedace, Total_Perc + "%"};
            model.addRow(resultdata);
            this.setFont(this.getFont().deriveFont(Font.BOLD));

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JTable jTable1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel1;
    private com.k33ptoo.components.KGradientPanel kGradientPanel2;
    // End of variables declaration//GEN-END:variables
}
